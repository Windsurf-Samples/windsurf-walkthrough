name: Handle Dependabot Alert Dismissal

on:
  dependabot_alert:
    types: [dismissed]

jobs:
  trigger-devin-session:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Trigger Devin Session
        # This step sends a request to the Devin API to create a new session
        run: |
          # Extract relevant information from the Dependabot alert
          ALERT_ID="${{ github.event.alert.number }}"
          ALERT_PACKAGE="${{ github.event.alert.dependency.package.name }}"
          ALERT_SEVERITY="${{ github.event.alert.security_vulnerability.severity }}"
          ALERT_SUMMARY="${{ github.event.alert.security_vulnerability.summary }}"
          
          # Create a JSON payload for the Devin API
          # The regular expression below constructs a valid JSON string with proper escaping
          # It matches the format required by the Devin API for creating a new session
          JSON_PAYLOAD=$(cat << EOF
          {
            "task": "Remediate Dependabot alert for package $ALERT_PACKAGE: $ALERT_SUMMARY",
            "repository": {
              "url": "${{ github.server_url }}/${{ github.repository }}",
              "branch": "${{ github.ref_name }}"
            }
          }
          EOF
          )
          
          # Send request to Devin API
          # The regular expression below validates that the API key is properly formatted before use
          # It matches the pattern of a valid Devin API key
          if [[ "${{ secrets.DEVIN_API_KEY }}" =~ ^devin_[a-zA-Z0-9]{32}$ ]]; then
            curl -X POST "https://api.devin.ai/sessions" \
              -H "Authorization: Bearer ${{ secrets.DEVIN_API_KEY }}" \
              -H "Content-Type: application/json" \
              -d "$JSON_PAYLOAD" \
              --fail
            
            echo "Successfully triggered Devin session for alert ID: $ALERT_ID"
          else
            echo "Error: Invalid Devin API key format"
            exit 1
          fi
